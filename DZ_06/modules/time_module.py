# Создайте модуль и напишите в нём функцию, которая получает на вход дату в формате DD.MM.YYYY
# Функция возвращает истину, если дата может существовать или ложь, если такая дата невозможна.
# Для простоты договоримся, что год может быть в диапазоне [1, 9999].
# Весь период (1 января 1 года - 31 декабря 9999 года) действует Григорианский календарь.
# Проверку года на високосность вынести в отдельную защищённую функцию.

# функция проверки даты на верность исчисления по Григорианскому календарю
def data_check (data_str):
    day, month, year = list(map(int, data_str.split(".")))
    
    # простая проверка на год и месяц
    if year < 1 or year > 9999:
        return False
    if month < 1 or month > 12:
        return False

    # определяем високосный год и кол-во дней в феврале
    if _check_leap_year (year):
        feb = 29            # кол-во дней в феврале 29 в високосный год
    else:
        feb = 28            # кол-во дней в феврале 28 в не високосный год

    # словарь кол-ва дней в каждом месяце
    day_month = {1: 31, 2: feb, 3:31, 4:30, 5:31, 6:30, 7:31, 8:31, 9:30, 10:31, 11:30, 12:31}
    
    if day < 1 or day > day_month[month]:
        return False

    return True


# фунция определяет високосный год и кол-во дней в феврале
def _check_leap_year (year):
    if year%4 != 0:
        return False
    if year % 100 == 0:
        if year % 400 == 0:
            return True
        else:
            return False
    return True