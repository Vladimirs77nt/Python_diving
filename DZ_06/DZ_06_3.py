# Задача 3

# Добавьте в пакет, созданный на семинаре шахматный модуль. Внутри него напишите код, решающий задачу о 8 ферзях.
# Известно, что на доске 8×8 можно расставить 8 ферзей так, чтобы они не били друг друга.
# Вам дана расстановка 8 ферзей на доске, определите, есть ли среди них пара бьющих друг друга.
# Программа получает на вход восемь пар чисел, каждое число от 1 до 8 - координаты 8 ферзей.
# Если ферзи не бьют друг друга верните истину, а если бьют - ложь.
# Напишите функцию в шахматный модуль. Используйте генератор случайных чисел для случайной расстановки ферзей в задаче выше.
# Проверяйте различный случайные варианты и выведите 4 успешных расстановки.

from modules.chess import print_сhess_table             # функция печатает шахматную доску по списку ферзей с координатами
from modules.chess import check_placement_queens_list   # функция определяет 8 пар ферзей - ферзи не бьют друг друга?
from modules.chess import queens_list_random            # функция генерирует 8 случайны пар ферзей
from modules.chess import queens_list_random_8          # функция генерирует 8 пар ферзей, которые не бьют друг друга

# модуль modules.chess:
# print_сhess_table(list_pairs): - функция печати шахматной доски 8х8 -> на входе список ферзей с координатами
# queens_list_random (): - функция формирования списка со случайной (рандомной) расстановкой 8 ферзей -> на ВЫХОДЕ список ферзей с координатами
# queens_list_random_8 (): - функция формирования списка c гарантированной расстановкой из 8 ферзей -> на ВЫХОДЕ список ферзей с координатами
# check_placement_queens_list (list_pairs): - функция определяет не бьют ли 8 ферзей из списка друг друга? -> True или False
# _place_battle (_chess_board, x, y): - защищенная функция определения всех клеток, которые будут находится под ударом ферзя
# placement_chess_table_list (list_pairs): - формирование доски 8х8 -> на входе список ферзей с координатами

placement_queens = [[[0,0], [1,2], [2,4], [3,6], [4,1], [5,3], [6,5], [7,7]],
                    [[0,3], [1,0], [2,4], [3,7], [4,1], [5,6], [6,2], [7,5]],
                    [[0,0], [1,3], [2,6], [3,1], [4,5], [5,7], [6,2], [7,4]],
                    [[0,5], [1,3], [2,6], [3,0], [4,7], [5,1], [6,4], [7,2]]]

print ()
print (" --- ПРОВЕРКА МОДУЛЯ - 4 заранее подготовленных списка ---\n")
for count, i in enumerate(placement_queens):
    print (f" проверочный список №{count+1}:\n")
    print_сhess_table(i)
    print(f"\nПроверка расстановки: {check_placement_queens_list(i)}")
    print ("\n-----------------------------------\n")

print ("-----------------------------------\n")
print (" --- ГЕНЕРИРУЕМ 4 списка ферзей со случайной расстановкой ---\n")
for i in range(4):
    print (f" случайный список №{i+1}:\n")
    list_queens = queens_list_random()
    print_сhess_table(list_queens)
    print(f"\nПроверка расстановки: {check_placement_queens_list(list_queens)}")
    print ("\n-----------------------------------\n")

print ("-----------------------------------\n")
print (" --- ГЕНЕРИРУЕМ 4 списка ферзей со случайной, но с ГАРАНТИРОВАННОЙ расстановкой !!! ---\n")
for i in range(4):
    print (f" гарантированный список №{i+1}:\n")
    list_queens = queens_list_random_8()
    print_сhess_table(list_queens)
    print(f"\nПроверка расстановки: {check_placement_queens_list(list_queens)}")
    print ("\n-----------------------------------\n")