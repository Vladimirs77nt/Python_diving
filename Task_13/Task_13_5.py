# –ó–∞–¥–∞—á–∞ ‚Ññ5

# –î–æ—Ä–∞–±–æ—Ç–∞–µ–º –∑–∞–¥–∞—á–∏ 3 –∏ 4.

# –°–æ–∑–¥–∞–π—Ç–µ –∫–ª–∞—Å—Å –ø—Ä–æ–µ–∫—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç —Å–ª–µ–¥—É—é—â–∏–µ –º–µ—Ç–æ–¥—ã:
# üìå –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö (—Ñ—É–Ω–∫—Ü–∏—è –∏–∑ –∑–∞–¥–∞–Ω–∏—è 4)
# üìå –≤—Ö–æ–¥ –≤ —Å–∏—Å—Ç–µ–º—É - —Ç—Ä–µ–±—É–µ—Ç —É–∫–∞–∑–∞—Ç—å –∏–º—è –∏ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –º–Ω–æ–∂–µ—Å—Ç–≤–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–∞–≥–∏—á–µ—Å–∫–∏–π –º–µ—Ç–æ–¥ –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞ —Ä–∞–≤–µ–Ω—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
#     –ï—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç, –≤—ã–∑—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞.
#     –ê –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –µ—Å—Ç—å, –ø–æ–ª—É—á–∏—Ç–µ –µ–≥–æ —É—Ä–æ–≤–µ–Ω—å –∏–∑ –º–Ω–æ–∂–µ—Å—Ç–≤–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
# üìå –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
#     e—Å–ª–∏ —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –º–µ–Ω—å—à–µ, —á–µ–º –≤–∞—à —É—Ä–æ–≤–µ–Ω—å, –≤—ã–∑—ã–≤–∞–π—Ç–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞.


import json
import os


# –∫–ª–∞—Å—Å —Å–µ—Å—Å–∏–∏
class Session:

    def __init__(self, user_name, user_id):
        self.user_name = user_name
        self.user_id = user_id
        self.__class__.users_dict = self.load_data()
        self.user = self.authorization (user_id, user_name)
        if self.user:
            self.name = self.user.name
            self.id_user = self.user.id_user
            self.access_level = self.user.access_level
            print (f"–ü–æ–ª—å–∑–æ–≤—Ç–µ–ª—å {self.name} c ID: {self.id_user} - –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω !!!")

        else:
            raise Exception ("–î–æ—Å—Ç—É–ø –æ—Ç–∫–∞–∑–∞–Ω!")

    # —á—Ç–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ —Ñ–∞–π–ª–∞ JSON -> –ø–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ—ã –≤ —Å–ª–æ–≤–∞—Ä—å: json_dict
    def load_data (self) -> dict:
        if os.path.exists(file_path):
            with open (file_path, "r", encoding='utf-8') as f:
                json_dict = json.load(f)
        else:
            json_dict = {}
        return json_dict
    
    def authorization(self, id_user, name_user):
        for _lvl, users in self.__class__.users_dict.items():
            for _id, _name in users.items():
                if int(_id) == id_user and _name == name_user:
                    return User (_name, _id, _lvl)
        return False
    
    def add_user (self, user_name, user_id, user_level):
        if user_level>int(self.user.access_level):
            raise Exception ("–í–∞—à —É—Ä–æ–≤–µ–Ω—å –¥–æ–ø—É—Å–∫–∞ –Ω–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –¥–æ–±–∞–≤–∏—Ç—å –Ω–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è!")
        if not check_ID (self.__class__.users_dict, str(user_id)):
            if str(user_level) in self.__class__.users_dict.keys():
                self.__class__.users_dict[str(user_level)][str(user_id)] = user_name
            else:
                self.__class__.users_dict[str(user_level)] = {str(user_id): user_name}
            save_data_json (self.__class__.users_dict)
            print (" -- –Ω–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω! --")
        else:
            raise Exception ("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å —Ç–∞–∫–∏–º ID —É–∂–µ –µ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ")
    
    def __str__(self) -> str:
        return f" << —Å–µ—Å—Å–∏—è –ø–æ–ª—å–∑–æ–≤—Ç–µ–ª—è {self.name} c id: {self.id_user}, —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: {self.access_level} >>"


# –∫–ª–∞—Å—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
class User:

    def __init__(self, name, id_user, access_level):
        self.name = name
        self.id_user = id_user
        self.access_level = access_level

    def __str__ (self):
        return f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {self.name}, ID: {self.id_user}, —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞: {self.access_level}"
    
    def __eq__(self, other: object) -> bool:
        return self.id_user == other.id_user


# --------------------------------------------------------------
# –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–µ–π –ø–∞–ø–∫–∏
def init (_dir):
    # default_path = os.getcwd()
    # dir_path = default_path + _dir
    try:
        os.chdir(dir_path)
    except:
        os.mkdir(dir_path)
        os.chdir(dir_path)


# –ø—Ä–æ–≤–µ—Ä–∫–∞ ID –≤ –±–∞–∑–µ
def check_ID (json_dict: dict, num_id: int):
    for users in json_dict.values():
        for _id in users.keys():
            if int(num_id) == int(_id):
                return True
    return False

# –≤–≤–æ–¥ ID
def input_id(json_dict: dict):
    while True:
        id_number = input ("–í–≤–µ–¥–∏—Ç–µ ID –Ω–æ–º–µ—Ä: ")
        if not id_number.isdigit():
            print (" >>> –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–≤—Ç–æ—Ä–Ω–æ...")
        elif check_ID (json_dict, int (id_number)):
            print (" >>> –¢–∞–∫–æ–π ID —É–∂–µ –µ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ. –í–≤–µ–¥–∏—Ç–µ ID –ø–æ–≤—Ç–æ—Ä–Ω–æ...")
        else:
            return id_number

# –≤–≤–æ–¥ —É—Ä–æ–≤–Ω—è –¥–æ—Å—Ç—É–ø–∞
def input_access(_min, _max):
    while True:
        access_level = input (f"–í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ ({_min}-{_max}): ")
        if not access_level.isdigit():
            print (" >>> –¢—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ...")
        elif not (_min <= int(access_level) <= _max):
            print (" >>> –£—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –≤—ã–±—Ä–∞–Ω –Ω–µ–≤–µ—Ä–Ω–æ! –í–≤–µ–¥–∏—Ç–µ —É—Ä–æ–≤–µ–Ω—å –¥–æ—Å—Ç—É–ø–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ –ø–æ–≤—Ç–æ—Ä–Ω–æ..")
        else:
            return access_level

# –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def add_user (json_dict: dict):
    while True:
        print (json_dict)
        name = input ("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
        if not name:
            print (" -- –ø—Ä–æ–≥—Ä–∞–º–º–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ --\n")
            return json_dict
        
        id_number = input_id(json_dict)
        access_level = input_access (1, 7)

        if access_level in json_dict.keys():
            json_dict[access_level][id_number] = name
        else:
            json_dict[access_level] = {id_number: name}
        save_data_json (json_dict)

# —á—Ç–µ–Ω–∏–µ —Ä–∞–±–æ—á–µ–≥–æ —Ñ–∞–π–ª–∞ JSON -> –ø–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ—ã –≤ —Å–ª–æ–≤–∞—Ä—å: json_dict
def load_data () -> dict:
    if os.path.exists(file_path):
        with open (file_path, "r", encoding='utf-8') as f:
            json_dict = json.load(f)
    else:
        json_dict = {}
    return json_dict

# –∑–∞–ø–∏—Å—å —Ä–∞–±–æ—á–µ–≥–æ —Ñ–∞–π–ª–∞ JSON -> –ø–µ—Ä–µ–¥–∞—á–∞ –∏–Ω—Ñ—ã –∏–∑ —Å–ª–æ–≤–∞—Ä—è: json_dict
def save_data_json (json_dict):
    with open (file_path, "w", encoding='utf-8') as f:
            json.dump(json_dict, f, indent=4, ensure_ascii=False)
    return


# ---------- –ó–ê–ü–£–°–ö –ü–†–û–ì–†–ê–ú–ú–´ -------------
dir_path = "E:/codes/Task_13"    # <-- —Ä–∞–±–æ—á–∞—è –ø–∞–ø–∫–∞ —Å —Ñ–∞–π–ª–∞–º–∏
file_path = "data_user.json"
init (dir_path)

my_session = Session ("–ò–≥–æ—Ä—å", 326)
print (my_session)

my_session.add_user ("–ú–∏—Ä–æ–Ω", 322, 7)